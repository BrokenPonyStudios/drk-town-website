---
import type { MarkdownInstance } from 'astro';
import Layout from '../../layouts/Layout.astro';

// 1. We define the exact "shape" of the data we expect in our markdown files.
interface Frontmatter {
  title: string;
  pubDate: string;
  description: string;
  heroImage?: string; // The '?' makes this property optional
}

// 2. We tell import.meta.glob to expect markdown files matching this shape.
// This gives us a fully typed `posts_raw` variable.
const posts_raw = import.meta.glob<MarkdownInstance<Frontmatter>>('../../content/news/*.md');

// 3. We call each function in the glob result to get the actual post data.
// The `posts` array will now be correctly typed, fixing all errors.
const posts = await Promise.all(Object.values(posts_raw).map(fn => fn()));
---
<Layout title="Aktuelles - DRK Beindersheim">
    <h1 class="text-4xl font-bold text-red-700 mb-6">Aktuelles & Termine</h1>
    <p class="text-lg mb-8">
        Hier finden Sie die neuesten Meldungen, Berichte von unseren Einsätzen und Veranstaltungen sowie wichtige Termine.
    </p>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {posts.sort((a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()).map((post) => (
            <article class="bg-white rounded-lg shadow-md overflow-hidden group transition-all duration-300 hover:shadow-xl hover:-translate-y-1">
                {post.frontmatter.heroImage && (
                    <a href={post.url} class="block overflow-hidden h-48">
                        <img src={post.frontmatter.heroImage} alt="" class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"/>
                    </a>
                )}
                <div class="p-6">
                    <p class="text-sm text-gray-500 mb-2">
                        {new Date(post.frontmatter.pubDate).toLocaleDateString('de-DE')}
                    </p>
                    <h2 class="text-2xl font-bold mb-3 leading-tight">
                        <a href={post.url} class="text-drk-dark group-hover:text-drk-red transition-colors">{post.frontmatter.title}</a>
                    </h2>
                    <p class="text-gray-700 mb-4 line-clamp-3">{post.frontmatter.description}</p>
                    <a href={post.url} class="font-bold text-drk-red hover:underline">Weiterlesen &rarr;</a>
                </div>
            </article>
        ))}
    </div>

    {posts.length === 0 && (
            <div class="bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4" role="alert">
            <p class="font-bold">Momentan keine Beiträge</p>
            <p>Sobald der erste Beitrag im CMS veröffentlicht wird, erscheint er hier.</p>
        </div>
    )}
</Layout>